name: 'CMake ready reusable action made by Lohk'
description: 'Made to build CMake projects for Linux, Windows and/or MacOS'
inputs:
  build_configuration:
    description: 'Release or Debug?'
    required: false
    default: 'Release'
  checkout:
    description: 'Should this checkout the project automagically?'
    required: false
    default: 'false'
  project_path:
    description: 'Different path to work on?'
    required: false
  
runs:
  using: composite
  steps:
    - name: Checkout if requested
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@main
      with:
        submodules: 'true'
        
    # self test if it is windows
    - name: Setup MSVC if needed
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
      
    - name: Build Cmake manually
      shell: bash
      env:
        BUILD_DIR: ${{ runner.workspace }}/build
        TEMPORARY_DIR: ${{ runner.workspace }}/build/_temp621
        OUTPUT_DIRECTORY: ${{ runner.workspace }}/built_executables
        BUILD_TYPE: ${{ inputs.build_configuration }}
        WORK_PATH: ${{ inputs.project_path }}
      run: |
        cd $WORK_PATH
        
        echo "CREATING BUILD PATH $BUILD_DIR"
        mkdir $BUILD_DIR
        
        echo "CREATING PATH FOR EXECUTABLES AT $TEMPORARY_DIR/executables";
        mkdir -p $TEMPORARY_DIR/executables;

        echo "CREATING PATH FOR LOGS AT $TEMPORARY_DIR/logs";
        mkdir -p $TEMPORARY_DIR/logs;

        echo "======================================"
        ls -l
        echo "======================================"

        echo "Preparing CMake..."
        
        cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DRUNTIME_OUTPUT_DIRECTORY=$OUTPUT_DIRECTORY -S . -B $BUILD_DIR > $TEMPORARY_DIR/logs/cmake_init.txt
                
        echo "======================================"
        ls -l
        echo "======================================"
                
        echo "Running build CMake..."

        if [[ ${{ runner.os }} == "Windows" ]]; then 
            cmake --build $BUILD_DIR --target ALL_BUILD --config $BUILD_TYPE > runner.txt;
            
            ls -R -l

            cp runner.txt $TEMPORARY_DIR\logs
            cp $BUILD_DIR/Release/*.exe $TEMPORARY_DIR/executables/ | :;
            cp $BUILD_DIR/Debug/*.exe $TEMPORARY_DIR/executables/ | :;
        else 
            cmake --build $BUILD_DIR > runner.txt;
            
            ls -R -l

            cat runner.txt | grep Built | awk '{print $NF}' > execs.txt;
            cp execs.txt $TEMPORARY_DIR/logs  
            cp runner.txt $TEMPORARY_DIR/logs

            for file in $(<execs.txt); do
              cp "$BUILD_DIR/$file" $TEMPORARY_DIR/executables/;
            done;
        fi  
        
        echo "End!"
 #   - name: Save logs
 #      uses: actions/upload-artifact@main
 #      with:
 #        name: logs_${{ runner.os }}
 #        path: ./build/_temp621/logs/

    - name: Save build
      uses: actions/upload-artifact@main
      with:
        name: build_${{ runner.os }}
        path: ${{ runner.workspace }}