name: 'Publisher helper that creates a changelog to append automatically'
description: 'Works on any platform.'
inputs:
  title:
    description: 'Title for the Release page'
    required: true
  body:
    description: 'Text to be on top of the description body'
    required: false
  artifact_name:
    description: 'Files to get from artifacts, or empty if all possible'
    required: false
  tag_name:
    description: 'Tag to be used'
    required: false
    default: ${{ github.ref_name }}
  prerelease:
    description: 'Set as pre-release'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Put title for summary
      shell: bash
      run: |
        echo "## 🌝 LunarisLib/actions/Publisher" >> $GITHUB_STEP_SUMMARY
        
        echo "*This is the log output for this action:*" >> $GITHUB_STEP_SUMMARY
        echo "- Title of release page: ${{ inputs.title }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tag name: ${{ inputs.tag_name }}" >> $GITHUB_STEP_SUMMARY

    - name: Re-checkout with depth
      uses: actions/checkout@main
      with:
        fetch-depth: 2

    - name: Generate changelog
      shell: bash
      run: |
        printf "${{ inputs.body }}" >> changelog.txt
        if [[ -n "${{ inputs.body }}" ]]; then printf "\n\n" >> changelog.txt; fi
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git rev-parse HEAD~1)...$(git rev-parse HEAD)" >> changelog.txt
            
    - if: ${{ inputs.artifact_name }}
      name: "Download back file"
      uses: actions/download-artifact@master
      with:
        name: ${{ inputs.artifact_name }}
        path: root_publish_files_folder/

    - if: ${{ ! inputs.artifact_name }}
      name: "Download back all files"
      uses: actions/download-artifact@master
      with:
        path: root_publish_files_folder/

    - if: ${{ ! inputs.artifact_name }}
      name: Fix pathing
      shell: bash
      run: |    
        cd root_publish_files_folder
        ls -rtd */* | sed -e 's/\*$//' | while read line; do
            mv $line $(sed -e 's/\//_/;s/\*$//' <<< $line)
        done
        rm -rf */
                
        echo "#### Files being uploaded:" >> $GITHUB_STEP_SUMMARY
        ls -A | sed -e 's/\*$//' | while read line; do
          echo "- $line" >> $GITHUB_STEP_SUMMARY
        done

        cd ..
        
    - name: Upload
      uses: softprops/action-gh-release@master
      with:
        name: ${{ inputs.title }}
        body_path: changelog.txt
        tag_name: ${{ inputs.tag_name }}
        fail_on_unmatched_files: 'true'
        files: root_publish_files_folder/*
        prerelease: ${{ inputs.prerelease }}
        
    - name: Finish summary with happy ending
      shell: bash
      run: |
        echo "#### The run ended with no issues ;P" >> $GITHUB_STEP_SUMMARY